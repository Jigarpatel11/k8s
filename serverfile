make sure system is havaing 1.5G ram and 2 core (master)  prerequiests diabled firewall,selinux,swapspace

yum install yum-utils -y
Add the stable Docker Community Edition repository to yum:

Copy
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
Install Containerd
Install the latest version of containerd:

Copy
yum install containerd.io -y

___________________
Remove the old containerd:apt --> remove containerd or docker or podman any contanirzation
3. Update repository data and install the new containerd: apt update, apt install containerd.io   or dnf for centos
4. Remove the installed default config file: rm /etc/containerd/config.toml
5. Restart containerd: systemctl restart containerd
________________________

cat kub.repo 

#####
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64/
enabled=1
gpgcheck=1
repo_gpgcheck=0
gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
#####


yum install kubeadm  -y

cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

sysctl --system

kubeadm init --apiserver-advertise-address=192.168.56.101 --pod-network-cidr=10.244.0.0/16        #make a copy of token u get after executing this commad and aipiserverip is u r serverip address

AS ROOT USER execute below command

#export KUBECONFIG=/etc/kubernetes/admin.conf

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml  or use the flannel file in this reo

OR if weave network
[root@k8s-master ~]# export kubever=$(kubectl version | base64 | tr -d '\n')
[root@k8s-master ~]# kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"

kubectl get nodes

 kubectl get pods --all-namespaces
 
 
 DASHBOARD SETUP
 https://github.com/kubernetes/dashboard/blob/master/docs/user/accessing-dashboard/README.md#login-not-available
 
 kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml

kubectl edit svc kubernetes-dashboard -n kubernetes-dashboard

change the type from clusterIP to the NodePort
```selector:
    k8s-app: kubernetes-dashboard
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}```
  #Execute below comands to grant permission to access the dashboard
  #kubectl create serviceaccount dashboard-admin-sa
  #kubectl create clusterrolebinding dashboard-admin-sa
  #kubectl create clusterrolebinding dashboard-admin-sa  --clusterrole=cluster-admin --serviceaccount=default:dashboard-admin-sa
  #kubectl get secrets
  #kubectl describe secrets dashboard-admin-sa-token-pgh8r  #### Use this token to access the kubernets dashboard.
  


If the cluster is unhealthy 

 please run the belwo  vi /etc/kubernetes/manifests/kube-scheduler.yaml
Clear the line (spec->containers->command) containing this phrase: - --port=0

$ vi /etc/kubernetes/manifests/kube-controller-manager.yaml
Clear the line (spec->containers->command) containing this phrase: - --port=0

$ sudo systemctl restart kubelet.service


 
 
 
